@model Yoklama.Models.ViewModels.ProfilePageVm

<div class="row g-3">
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-body d-flex align-items-center gap-3 flex-wrap flex-md-nowrap profile-header">
                <div
                    class="avatar avatar-lg bg-gradient-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center">
                    <i class="fa-solid fa-user"></i>
                </div>
                <div class="flex-fill">
                    <div class="d-flex flex-column">
                        <span class="h5 mb-0">@Model.DisplayName</span>
                        <span class="text-muted">@Model.Role</span>
                    </div>
                </div>
                <div class="logout-container">
                    <a href="#" class="btn btn-icon p-3 fs-4"
                        onclick="document.getElementById('logoutForm').submit(); return false;" title="Çıkış Yap">
                        <i class="fa-solid fa-right-from-bracket fa-fw"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-lg-7 col-xl-7">
        <div class="card">
            <div class="card-header d-flex align-items-center gap-2">
                <i class="fa-solid fa-id-card"></i>
                <span class="h6 mb-0">Profil Bilgileri</span>
            </div>
            <div class="card-body">
                <form asp-action="UpdateProfile" asp-controller="Account" method="post" class="row g-3">
                    @Html.AntiForgeryToken()
                    <div class="col-12">
                        <label class="form-label">Kullanıcı Adı</label>
                        <input asp-for="Profile.UserName" class="form-control" />
                        <span asp-validation-for="Profile.UserName" class="text-danger small"></span>
                    </div>
                    <div class="col-12">
                        <label class="form-label">Ad Soyad</label>
                        <input asp-for="Profile.FullName" class="form-control" />
                        <span asp-validation-for="Profile.FullName" class="text-danger small"></span>
                    </div>

                    <div class="col-12 d-flex justify-content-end gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa-solid fa-floppy-disk"></i>
                            Kaydet
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-12 col-lg-5 col-xl-5">
        <div class="card">
            <div class="card-header d-flex align-items-center gap-2">
                <i class="fa-solid fa-key"></i>
                <span class="h6 mb-0">Şifre Değiştir</span>
            </div>
            <div class="card-body">
                <form asp-action="ChangePassword" asp-controller="Account" method="post" class="row g-3"
                    id="changePasswordForm">
                    @Html.AntiForgeryToken()

                    <div class="col-12">
                        <label class="form-label">Mevcut Şifre</label>
                        <div class="input-group">
                            <input asp-for="ChangePassword.CurrentPassword" class="form-control password-input"
                                autocomplete="current-password" />
                            <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1"
                                aria-label="Şifreyi göster/gizle"><i class="fa-regular fa-eye"></i></button>
                        </div>
                        <span asp-validation-for="ChangePassword.CurrentPassword" class="text-danger small"></span>
                    </div>

                    <div class="col-12">
                        <label class="form-label">Yeni Şifre</label>
                        <div class="input-group">
                            <input asp-for="ChangePassword.NewPassword" class="form-control password-input"
                                autocomplete="new-password" />
                            <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1"
                                aria-label="Şifreyi göster/gizle"><i class="fa-regular fa-eye"></i></button>
                        </div>
                        <div class="form-text"><small>En az 6 karakter olmalıdır.</small></div>
                        <div class="password-strength mt-1" aria-hidden="true">
                            <div class="password-strength-bar"></div>
                        </div>
                        <span asp-validation-for="ChangePassword.NewPassword" class="text-danger small"></span>
                    </div>

                    <div class="col-12">
                        <label class="form-label">Yeni Şifre (Tekrar)</label>
                        <div class="input-group">
                            <input asp-for="ChangePassword.ConfirmNewPassword" class="form-control password-input"
                                autocomplete="new-password" />
                            <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1"
                                aria-label="Şifreyi göster/gizle"><i class="fa-regular fa-eye"></i></button>
                        </div>
                        <span asp-validation-for="ChangePassword.ConfirmNewPassword" class="text-danger small"></span>
                    </div>

                    <div class="col-12 d-flex justify-content-end gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa-solid fa-rotate"></i>
                            Şifreyi Güncelle
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
            const forms = document.querySelectorAll('#changePasswordForm');
            forms.forEach(form => {
                form.querySelectorAll('.toggle-password').forEach(btn => {
                    btn.addEventListener('click', () => {
                        const input = btn.parentElement.querySelector('.password-input');
                        if (!input) return;
                        const isPassword = input.getAttribute('type') === 'password';
                        input.setAttribute('type', isPassword ? 'text' : 'password');
                        btn.innerHTML = `<i class="fa-regular ${isPassword ? 'fa-eye-slash' : 'fa-eye'}"></i>`;
                    });
                });

                const newPassword = form.querySelector('input[name="ChangePassword.NewPassword"]');
                const strengthEl = form.querySelector('.password-strength');
                const strengthBar = strengthEl ? strengthEl.querySelector('.password-strength-bar') : null;
                if (newPassword && strengthEl) {
                    const evaluate = (val) => {
                        let score = 0;
                        if (!val) return 0;
                        if (val.length >= 6) score++;
                        if (/[A-Z]/.test(val)) score++;
                        if (/[0-9]/.test(val)) score++;
                        if (/[^A-Za-z0-9]/.test(val)) score++;
                        return Math.min(score, 4);
                    };
                    const render = (score) => {
                        const widths = ['0%', '25%', '50%', '75%', '100%'];
                        const colors = ['#e5e7eb', '#ef4444', '#f59e0b', '#10b981', '#10b981'];
                        const labels = ['Zayıf', 'Çok Zayıf', 'Zayıf', 'Orta', 'Güçlü'];
                        if (strengthBar) {
                            strengthBar.style.width = widths[score];
                            strengthBar.style.backgroundColor = colors[score];
                        } else {
                            strengthEl.style.background = colors[score];
                        }
                        strengthEl.title = labels[score];
                    };
                    newPassword.addEventListener('input', () => {
                        render(evaluate(newPassword.value));
                    });
                    render(evaluate(newPassword.value));
                }
            });
        })();
    </script>
}
