@model IEnumerable<Yoklama.Models.Entities.AuditLog>

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
        <div class="mb-3 mb-md-0">
            <h2 class="mb-1">
                <i class="fas fa-bell me-2 text-primary"></i>Bildirimler
            </h2>
            <small class="text-muted">Sistem aktivitelerini takip edin</small>
        </div>
        <div class="d-flex gap-2">
            @if (Model.Any())
            {
                <button type="button" class="btn btn-outline-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteAllModal">
                    <i class="fas fa-trash me-1"></i>
                    <span class="d-none d-sm-inline">Tümünü Sil</span>
                </button>
            }
            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary btn-sm">
                <i class="fas fa-home me-1"></i>
                <span class="d-none d-sm-inline">Ana Sayfa</span>
            </a>
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            @TempData["InfoMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Stats Card -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="row text-center g-3">
                        <div class="col-6 col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <i class="fas fa-bell text-primary fa-2x mb-2"></i>
                                <h4 class="mb-0">@Model.Count()</h4>
                                <small class="text-muted">Toplam Bildirim</small>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <i class="fas fa-plus-circle text-success fa-2x mb-2"></i>
                                <h4 class="mb-0">@Model.Count(x => x.Action == "Create")</h4>
                                <small class="text-muted">Oluşturulan</small>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <i class="fas fa-edit text-warning fa-2x mb-2"></i>
                                <h4 class="mb-0">@Model.Count(x => x.Action == "Update")</h4>
                                <small class="text-muted">Güncellenen</small>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="d-flex flex-column align-items-center">
                                <i class="fas fa-trash text-danger fa-2x mb-2"></i>
                                <h4 class="mb-0">@Model.Count(x => x.Action == "Delete")</h4>
                                <small class="text-muted">Silinen</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Notifications List -->
    <div class="card shadow-sm">
        <div class="card-header bg-transparent">
            <h5 class="mb-0">
                <i class="fas fa-list me-2"></i>Bildirim Listesi
            </h5>
        </div>
        <div class="card-body p-0">
            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-bell-slash fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Henüz bildirim bulunmuyor</h5>
                    <p class="text-muted">Sistem aktiviteleri burada görünecek</p>
                </div>
            }
            else
            {
                <div class="list-group list-group-flush">
                    @foreach (var log in Model)
                    {
                        var badgeClass = log.Action switch
                        {
                            "Create" => "bg-success",
                            "Update" => "bg-warning text-dark",
                            "Delete" => "bg-danger",
                            _ => "bg-secondary"
                        };
                        
                        var actionText = log.Action switch
                        {
                            "Create" => "Oluşturuldu",
                            "Update" => "Güncellendi",
                            "Delete" => "Silindi",
                            _ => log.Action
                        };
                        
                        var entityText = log.Entity switch
                        {
                            "Student" => "Öğrenci",
                            "User" => "Kullanıcı",
                            "Group" => "Grup",
                            "Lesson" => "Ders",
                            "AttendanceSession" => "Yoklama",
                            _ => log.Entity
                        };

                        var entityIcon = log.Entity switch
                        {
                            "Student" => "fas fa-user-graduate",
                            "User" => "fas fa-user",
                            "Group" => "fas fa-users",
                            "Lesson" => "fas fa-book",
                            "AttendanceSession" => "fas fa-clipboard-check",
                            _ => "fas fa-info-circle"
                        };
                        
                        <div class="list-group-item list-group-item-action notification-item" 
                             data-entity="@log.Entity" 
                             data-entity-id="@log.EntityId"
                             style="cursor: pointer;">
                            <div class="d-flex align-items-start">
                                <!-- Icon -->
                                <div class="me-3">
                                    <div class="bg-light rounded-circle p-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                        <i class="@entityIcon text-primary"></i>
                                    </div>
                                </div>
                                
                                <!-- Content -->
                                <div class="flex-grow-1">
                                    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start mb-2">
                                        <div class="mb-2 mb-md-0">
                                            <h6 class="mb-1 fw-semibold">
                                                <span class="badge @badgeClass me-2">@actionText</span>
                                                @entityText
                                            </h6>
                                            <small class="text-muted">
                                                <i class="fas fa-clock me-1"></i>
                                                @log.Timestamp.ToLocalTime().ToString("dd.MM.yyyy HH:mm")
                                            </small>
                                        </div>
                                        <div class="text-end">
                                            <div class="d-flex flex-column align-items-end">
                                                @if (log.User != null)
                                                {
                                                    <small class="text-muted">
                                                        <i class="fas fa-user me-1"></i>@log.User.FullName
                                                    </small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted">
                                                        <i class="fas fa-user-slash me-1"></i>Sistem
                                                    </small>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    
                                    @if (!string.IsNullOrWhiteSpace(log.DetailsJson))
                                    {
                                        <div class="mt-2">
                                            <div class="bg-light p-2 rounded border-start border-3 border-primary">
                                                @{
                                                    try
                                                    {
                                                        // JSON'u parse et
                                                        var details = System.Text.Json.JsonSerializer.Deserialize<System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>>(log.DetailsJson);
                                                        if (details != null && details.Any())
                                                        {
                                                            foreach (var detail in details)
                                                            {
                                                                if (detail.ContainsKey("Property") && detail.ContainsKey("Old") && detail.ContainsKey("New"))
                                                                {
                                                                    var property = detail["Property"]?.ToString() ?? "Bilinmeyen";
                                                                    var oldValue = detail["Old"]?.ToString() ?? "";
                                                                    var newValue = detail["New"]?.ToString() ?? "";
                                                                    
                                                                    <div class="mb-3">
                                                                        <div class="d-flex align-items-center mb-2">
                                                                            <i class="fas fa-edit text-primary me-2"></i>
                                                                            <strong class="text-primary">@property</strong>
                                                                        </div>
                                                                        <div class="row g-2">
                                                                            <div class="col-12 col-md-6">
                                                                                <div class="bg-danger bg-opacity-10 p-2 rounded border border-danger border-opacity-25">
                                                                                    <div class="d-flex align-items-center mb-1">
                                                                                        <i class="fas fa-times-circle text-danger me-1"></i>
                                                                                        <small class="text-danger fw-semibold">Eski Değer:</small>
                                                                                    </div>
                                                                                    <div class="text-truncate" style="max-width: 200px;" title="@oldValue">@oldValue</div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-12 col-md-6">
                                                                                <div class="bg-success bg-opacity-10 p-2 rounded border border-success border-opacity-25">
                                                                                    <div class="d-flex align-items-center mb-1">
                                                                                        <i class="fas fa-check-circle text-success me-1"></i>
                                                                                        <small class="text-success fw-semibold">Yeni Değer:</small>
                                                                                    </div>
                                                                                    <div class="text-truncate" style="max-width: 200px;" title="@newValue">@newValue</div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div class="text-muted">
                                                                <i class="fas fa-info-circle me-1"></i>
                                                                <span>Değişiklik detayları bulunamadı</span>
                                                            </div>
                                                        }
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        <div class="text-muted">
                                                            <i class="fas fa-exclamation-triangle me-1"></i>
                                                            <span>Detaylar yüklenemedi: @ex.Message</span>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete All Modal -->
<div class="modal fade" id="deleteAllModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header text-white" style="background: linear-gradient(90deg, #dc3545, #e74c3c);">
                <h5 class="modal-title">
                    <i class="fas fa-trash me-2"></i>Tüm Bildirimleri Sil
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body py-4">
                <div class="d-flex align-items-start">
                    <div class="me-3">
                        <div class="bg-danger bg-opacity-10 rounded-circle p-2">
                            <i class="fas fa-exclamation-triangle text-danger"></i>
                        </div>
                    </div>
                    <div class="flex-fill">
                        <h6 class="mb-2">Emin misiniz?</h6>
                        <p class="mb-0 text-muted">
                            Tüm bildirimlerinizi silmek üzeresiniz. Bu işlem geri alınamaz ve sadece sizin bildirimlerinizi etkiler.
                        </p>
                        <div class="mt-3">
                            <div class="alert alert-warning mb-0">
                                <i class="fas fa-info-circle me-1"></i>
                                <strong>@Model.Count()</strong> bildirim silinecek.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer bg-light-subtle">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>İptal
                </button>
                <form method="post" action="@Url.Action("DeleteAll", "Notifications")" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Evet, Tümünü Sil
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Bildirim öğelerine tıklanabilirlik ekle
            document.querySelectorAll('.notification-item').forEach(item => {
                item.addEventListener('click', function() {
                    const entity = this.dataset.entity;
                    const entityId = this.dataset.entityId;
                    
                    // Entity tipine göre yönlendirme yap
                    switch(entity.toLowerCase()) {
                        case 'student':
                            window.location.href = '@Url.Action("Students", "Admin")';
                            break;
                        case 'user':
                            window.location.href = '@Url.Action("Users", "Admin")';
                            break;
                        case 'group':
                            window.location.href = '@Url.Action("Index", "Groups")';
                            break;
                        case 'lesson':
                            window.location.href = '@Url.Action("Index", "Lessons")';
                            break;
                        case 'attendancesession':
                            window.location.href = '@Url.Action("Index", "Attendance")';
                            break;
                        default:
                            // Varsayılan olarak ana sayfaya yönlendir
                            window.location.href = '@Url.Action("Index", "Home")';
                    }
                });
                
                // Hover efekti
                item.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = '#f8f9fa';
                    this.style.transition = 'background-color 0.2s ease';
                });
                
                item.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                });
            });
        });
    </script>
}


